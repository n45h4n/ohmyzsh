# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:$HOME/.local/bin:/usr/local/bin:$PATH

# Path to your Oh My Zsh installation.
# export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time Oh My Zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="robbyrussell"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='nvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch $(uname -m)"

# Set personal aliases, overriding those provided by Oh My Zsh libs,
# plugins, and themes. Aliases can be placed here, though Oh My Zsh
# users are encouraged to define aliases within a top-level file in
# the $ZSH_CUSTOM folder, with .zsh extension. Examples:
# - $ZSH_CUSTOM/aliases.zsh
# - $ZSH_CUSTOM/macos.zsh
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# =============================
# Oh My Zsh (vendored in dotfiles)
# =============================
export ZSH="$HOME/.oh-my-zsh"
export ZSH_CUSTOM="$HOME/dotfiles/omz-custom"

# Keep PATH/fpath unique and allow # comments in interactive shells
typeset -U path PATH fpath
setopt INTERACTIVE_COMMENTS

# =============================
# PATH (prefer your bins, GNU coreutils if available)
# =============================
export PATH="$HOME/bin:$HOME/.local/bin:$PATH"
# Apple Silicon Homebrew coreutils
[ -d /opt/homebrew/opt/coreutils/libexec/gnubin ] && export PATH="/opt/homebrew/opt/coreutils/libexec/gnubin:$PATH"
# Intel mac / Linuxbrew coreutils
[ -d /usr/local/opt/coreutils/libexec/gnubin ] && export PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
[ -d /home/linuxbrew/.linuxbrew/bin ] && export PATH="/home/linuxbrew/.linuxbrew/bin:$PATH"

# =============================
# Oh My Zsh basic settings
# =============================
ZSH_THEME="robbyrussell"
# Avoid alias-heavy plugins that override your own
plugins=(git z fzf)

# ---- Completion preferences (must be set BEFORE OMZ compinit) ----
zmodload zsh/complist
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'
zstyle ':completion:*' menu select

# Load OMZ
source "$ZSH/oh-my-zsh.sh"

# =============================
# Helpers / detection
# =============================
_is_gnu() { "$1" --version 2>/dev/null | head -n1 | grep -qi 'gnu'; }

# =============================
# Colors for pager (man pages)
# =============================
export LESS_TERMCAP_mb=$'\E[01;31m'
export LESS_TERMCAP_md=$'\E[01;31m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[01;44;33m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;32m'

# =============================
# History & behavior
# =============================
HISTFILE="$HOME/.zsh_history"
HISTSIZE=10000
SAVEHIST=20000
setopt HIST_IGNORE_DUPS HIST_FIND_NO_DUPS SHARE_HISTORY INC_APPEND_HISTORY
setopt HIST_REDUCE_BLANKS
setopt AUTO_CD       # cd on bare dir name
setopt NO_CASE_GLOB  # case-insensitive globbing
# setopt CORRECT     # (optional) mild command correction

# =============================
# fzf (brew installer set up the files; source them if present)
# =============================
if command -v brew >/dev/null 2>&1; then
  FZF_SHELL="$(brew --prefix)/opt/fzf/shell"
  [ -f "$FZF_SHELL/completion.zsh" ]   && source "$FZF_SHELL/completion.zsh"
  [ -f "$FZF_SHELL/key-bindings.zsh" ] && source "$FZF_SHELL/key-bindings.zsh"
fi
[ -f "$HOME/.fzf.zsh" ] && source "$HOME/.fzf.zsh"

# =============================
# Grep / diff color
# =============================
if _is_gnu grep; then
  alias grep='grep --color=auto'
fi
if command -v gdiff >/dev/null 2>&1 || _is_gnu diff; then
  if command -v gdiff >/dev/null 2>&1; then
    alias diff='gdiff --color=auto'
  else
    alias diff='diff --color=auto'
  fi
fi

# =============================
# ls / eza (override OMZ aliases cleanly)
# =============================
unalias ls 2>/dev/null; unalias ll 2>/dev/null; unalias la 2>/dev/null
if command -v eza >/dev/null 2>&1; then
  alias ls='eza --icons'
  alias ll='eza -l --icons'
  alias la='eza -la --icons'
  alias lt='eza --tree --icons'
else
  if _is_gnu ls; then
    alias ls='ls --color=auto'
    alias ll='ls -lh --color=auto'
    alias la='ls -lAh --color=auto'
  else
    alias ls='ls -G'
    alias ll='ls -lhG'
    alias la='ls -lAhG'
  fi
fi

# =============================
# Editor & locale
# =============================
export EDITOR="nvim"
export LANG="en_US.UTF-8"

# =============================
# Aliases & shortcuts (yours)
# =============================
alias gs='git status'
alias gd='git diff'
alias gu='git pull'
alias ga='git add .'
alias gc='git commit -m'
alias gp='git push'
alias mcd='make compose-down'
alias mcu='make compose-up'
alias mn='make ngrok'
alias msql='make mysql'
alias ..='cd ..'
alias ...='cd ~'
alias p='cd ~/projects'
alias v='nvim'
alias rn='ranger'
alias zshrc='nvim ~/.zshrc'
alias ohmyzsh='cd ~/dotfiles/vendor/ohmyzsh/'
alias reload='exec zsh -l'
alias proj='cd $(git rev-parse --show-toplevel 2>/dev/null || echo .)'
alias pidi='cd ~/projects/pidi/pidi-backend'
alias dotfiles='cd ~/dotfiles'
alias kickstart='cd ~/kickstart.nvim'
alias asuri='cd ~/projects/Asuri/'
alias ide='zellij -l dev'
alias cl='clear'
alias venv='source .venv/bin/activate'

# =============================
# Prompt
# (Using OMZ theme; if you prefer your old vcs_info prompt, uncomment below)
# =============================
# autoload -Uz vcs_info
# precmd() { vcs_info }
# zstyle ':vcs_info:git:*' formats ' (%b)'
# zstyle ':vcs_info:git:*' actionformats ' (%b|%a)'
# setopt PROMPT_SUBST
# PROMPT='%F{green}%n@%m%f %F{blue}%~%f${vcs_info_msg_0_} %# '

# =============================
# Simple updater (safe with submodules)
# =============================
update-all() {
  echo "↻ Updating dotfiles & submodules…"
  ( cd "$HOME/dotfiles" \
    && git pull --rebase --autostash --quiet || true \
    && git submodule sync --recursive \
    && git submodule update --init --recursive )
  # Optional: brew bundle (comment out if you don’t want this every time)
  if command -v brew >/dev/null 2>&1; then
    [ -f "$HOME/dotfiles/brew/Brewfile.common" ] && brew bundle --file="$HOME/dotfiles/brew/Brewfile.common" >/dev/null || true
    case "$(uname -s)" in
      Darwin) [ -f "$HOME/dotfiles/brew/Brewfile.mac" ]   && brew bundle --file="$HOME/dotfiles/brew/Brewfile.mac"   >/dev/null || true ;;
      Linux)  [ -f "$HOME/dotfiles/brew/Brewfile.linux" ] && brew bundle --file="$HOME/dotfiles/brew/Brewfile.linux" >/dev/null || true ;;
    esac
  fi
  echo "✅ All up to date"
}

# =============================
# Fallback Homebrew env if zprofile didn't run (non-login shells)
# =============================
if ! command -v brew >/dev/null 2>&1; then
  if [ -x /home/linuxbrew/.linuxbrew/bin/brew ]; then
    eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
  elif [ -x /opt/homebrew/bin/brew ]; then
    eval "$(/opt/homebrew/bin/brew shellenv)"
  elif [ -x /usr/local/bin/brew ]; then
    eval "$(/usr/local/bin/brew shellenv)"
  fi
fi

